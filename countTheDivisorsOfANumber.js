// Посчитайте количество делителей натурального числа n.

// Случайные тесты доходят до n = 500000.

// Примеры (вход --> вывод)
// 4 --> 3 // we have 3 divisors - 1, 2 and 4
// 5 --> 2 // we have 2 divisors - 1 and 5
// 12 --> 6 // we have 6 divisors - 1, 2, 3, 4, 6 and 12
// 30 --> 8 // we have 8 divisors - 1, 2, 3, 5, 6, 10, 15 and 30
// Обратите внимание, что вы должны возвращать только число, количество делителей. 
// Числа в скобках показаны только для того, чтобы вы могли видеть,
// какие числа учитываются в каждом конкретном случае.

function getDivisorsCnt(n) {
  // todo
  let counter = 0;
  // const halfNum = Math.floor(n / 2); поиск делителей до половины числа + 1 будет в два раза эффективней обычного поискано,
  //но гораздо менее эффективен поиска при помощи квадрата делителя
  const sqrtNum = Math.sqrt(n); // квадратный корень числа. 
  //Делители зеркаляться a * b = n === b * a = n и когда a = b это их середина и a**2 = n
  // 10  1  2  3.16 в квадрате = 10 4 1 2 2 в квадрате = 2
  //     10 5                         4 2
  // таким образом корень числа это цент пар делителей 
  // !если корень у числа цетый отнимаем от результата 1 чтобы не дублировать центральный делитель!

  for (let i = 1; i <= sqrtNum; i++) {
    if (!(n % i)) {
      counter++;
    }
  }

  if (Number.isInteger(sqrtNum)) {
    return counter * 2 - 1; // что бы не дублировать центральный делитель ряда квадрат которого равен n
  } else {
    return counter * 2; // центральный делитель отсутствует и дублировать нечего
  }
  
}


console.log(getDivisorsCnt(1), 1);
console.log(getDivisorsCnt(2), 2);
console.log(getDivisorsCnt(4), 3);
console.log(getDivisorsCnt(10), 4);
console.log(getDivisorsCnt(11), 2);
console.log(getDivisorsCnt(54), 8);
console.log(getDivisorsCnt(6469693230));